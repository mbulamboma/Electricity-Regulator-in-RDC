"""Ajout des modules production thermique et solaire

Revision ID: 4237142c9582
Revises: fad89811421e
Create Date: 2025-10-12 09:39:30.830229

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4237142c9582'
down_revision = 'fad89811421e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('centrales_solaire',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=False),
    sa.Column('date_modification', sa.DateTime(), nullable=False),
    sa.Column('actif', sa.Boolean(), nullable=False),
    sa.Column('operateur_id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=200), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('localisation', sa.String(length=200), nullable=True),
    sa.Column('province', sa.String(length=100), nullable=True),
    sa.Column('puissance_installee', sa.Float(), nullable=True),
    sa.Column('puissance_disponible', sa.Float(), nullable=True),
    sa.Column('type_centrale', sa.String(length=50), nullable=True),
    sa.Column('technologie_modules', sa.String(length=50), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('orientation_azimut', sa.Float(), nullable=True),
    sa.Column('inclinaison_modules', sa.Float(), nullable=True),
    sa.Column('nombre_modules', sa.Integer(), nullable=True),
    sa.Column('puissance_unitaire_module', sa.Float(), nullable=True),
    sa.Column('marque_modules', sa.String(length=100), nullable=True),
    sa.Column('modele_modules', sa.String(length=100), nullable=True),
    sa.Column('technologie_cellules', sa.String(length=50), nullable=True),
    sa.Column('nombre_onduleurs', sa.Integer(), nullable=True),
    sa.Column('puissance_unitaire_onduleur', sa.Float(), nullable=True),
    sa.Column('marque_onduleurs', sa.String(length=100), nullable=True),
    sa.Column('type_onduleur', sa.String(length=50), nullable=True),
    sa.Column('rendement_onduleur', sa.Float(), nullable=True),
    sa.Column('stockage_batterie', sa.Boolean(), nullable=True),
    sa.Column('capacite_stockage', sa.Float(), nullable=True),
    sa.Column('type_batterie', sa.String(length=50), nullable=True),
    sa.Column('nombre_batteries', sa.Integer(), nullable=True),
    sa.Column('marque_batteries', sa.String(length=100), nullable=True),
    sa.Column('systeme_suivi', sa.Boolean(), nullable=True),
    sa.Column('type_suivi', sa.String(length=50), nullable=True),
    sa.Column('precision_suivi', sa.Float(), nullable=True),
    sa.Column('niveau_tension', sa.Float(), nullable=True),
    sa.Column('tension_evacuation', sa.String(length=50), nullable=True),
    sa.Column('nombre_transformateurs', sa.Integer(), nullable=True),
    sa.Column('puissance_transformateurs', sa.Float(), nullable=True),
    sa.Column('irradiation_annuelle_estimee', sa.Float(), nullable=True),
    sa.Column('temperature_fonctionnement_nominale', sa.Float(), nullable=True),
    sa.Column('coefficient_temperature', sa.Float(), nullable=True),
    sa.Column('facteur_degradation_annuelle', sa.Float(), nullable=True),
    sa.Column('systeme_monitoring', sa.Boolean(), nullable=True),
    sa.Column('fournisseur_monitoring', sa.String(length=100), nullable=True),
    sa.Column('precision_mesure', sa.Float(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('mode_fonctionnement', sa.String(length=50), nullable=True),
    sa.Column('superficie_totale', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date_mise_service', sa.DateTime(), nullable=True),
    sa.Column('date_derniere_revision', sa.DateTime(), nullable=True),
    sa.Column('prochaine_maintenance', sa.DateTime(), nullable=True),
    sa.Column('constructeur', sa.String(length=100), nullable=True),
    sa.Column('installateur', sa.String(length=100), nullable=True),
    sa.Column('annee_construction', sa.Integer(), nullable=True),
    sa.Column('duree_vie_estimee', sa.Integer(), nullable=True),
    sa.Column('garantie_modules', sa.Integer(), nullable=True),
    sa.Column('garantie_onduleurs', sa.Integer(), nullable=True),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['operateur_id'], ['operateurs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    with op.batch_alter_table('centrales_solaire', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_centrales_solaire_nom'), ['nom'], unique=False)

    op.create_table('centrales_thermique',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=False),
    sa.Column('date_modification', sa.DateTime(), nullable=False),
    sa.Column('actif', sa.Boolean(), nullable=False),
    sa.Column('operateur_id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=200), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('localisation', sa.String(length=200), nullable=True),
    sa.Column('province', sa.String(length=100), nullable=True),
    sa.Column('puissance_installee', sa.Float(), nullable=True),
    sa.Column('puissance_disponible', sa.Float(), nullable=True),
    sa.Column('type_centrale', sa.String(length=50), nullable=True),
    sa.Column('type_combustible', sa.String(length=50), nullable=True),
    sa.Column('consommation_specifique', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('nombre_groupes', sa.Integer(), nullable=True),
    sa.Column('type_moteur', sa.String(length=50), nullable=True),
    sa.Column('refroidissement', sa.String(length=50), nullable=True),
    sa.Column('niveau_tension', sa.Float(), nullable=True),
    sa.Column('tension_evacuation', sa.String(length=50), nullable=True),
    sa.Column('systeme_demarrage', sa.String(length=50), nullable=True),
    sa.Column('systeme_refroidissement', sa.String(length=100), nullable=True),
    sa.Column('capacite_stockage_combustible', sa.Float(), nullable=True),
    sa.Column('autonomie_combustible', sa.Float(), nullable=True),
    sa.Column('systeme_traitement_fumees', sa.Boolean(), nullable=True),
    sa.Column('niveau_emission_nox', sa.Float(), nullable=True),
    sa.Column('niveau_emission_co', sa.Float(), nullable=True),
    sa.Column('certification_environnementale', sa.String(length=100), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('mode_fonctionnement', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date_mise_service', sa.DateTime(), nullable=True),
    sa.Column('date_derniere_revision', sa.DateTime(), nullable=True),
    sa.Column('prochaine_maintenance', sa.DateTime(), nullable=True),
    sa.Column('constructeur', sa.String(length=100), nullable=True),
    sa.Column('fournisseur_combustible', sa.String(length=100), nullable=True),
    sa.Column('annee_construction', sa.Integer(), nullable=True),
    sa.Column('duree_vie_estimee', sa.Integer(), nullable=True),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['operateur_id'], ['operateurs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    with op.batch_alter_table('centrales_thermique', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_centrales_thermique_nom'), ['nom'], unique=False)

    op.create_table('rapports_solaire',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=False),
    sa.Column('date_modification', sa.DateTime(), nullable=False),
    sa.Column('actif', sa.Boolean(), nullable=False),
    sa.Column('centrale_id', sa.Integer(), nullable=False),
    sa.Column('annee', sa.Integer(), nullable=False),
    sa.Column('mois', sa.Integer(), nullable=False),
    sa.Column('periode_debut', sa.DateTime(), nullable=False),
    sa.Column('periode_fin', sa.DateTime(), nullable=False),
    sa.Column('energie_produite', sa.Float(), nullable=True),
    sa.Column('energie_disponible', sa.Float(), nullable=True),
    sa.Column('facteur_charge', sa.Float(), nullable=True),
    sa.Column('productible_theorique', sa.Float(), nullable=True),
    sa.Column('performance_ratio', sa.Float(), nullable=True),
    sa.Column('irradiation_totale', sa.Float(), nullable=True),
    sa.Column('irradiation_moyenne_quotidienne', sa.Float(), nullable=True),
    sa.Column('temperature_ambiante_moyenne', sa.Float(), nullable=True),
    sa.Column('temperature_modules_moyenne', sa.Float(), nullable=True),
    sa.Column('humidite_relative_moyenne', sa.Float(), nullable=True),
    sa.Column('vitesse_vent_moyenne', sa.Float(), nullable=True),
    sa.Column('heures_ensoleillement', sa.Float(), nullable=True),
    sa.Column('rendement_global', sa.Float(), nullable=True),
    sa.Column('rendement_modules', sa.Float(), nullable=True),
    sa.Column('rendement_onduleurs', sa.Float(), nullable=True),
    sa.Column('pertes_ombrages', sa.Float(), nullable=True),
    sa.Column('pertes_cables', sa.Float(), nullable=True),
    sa.Column('pertes_poussiere', sa.Float(), nullable=True),
    sa.Column('pertes_thermiques', sa.Float(), nullable=True),
    sa.Column('temps_fonctionnement_onduleurs', sa.Float(), nullable=True),
    sa.Column('nombre_demarrages_onduleurs', sa.Integer(), nullable=True),
    sa.Column('nombre_arrets_onduleurs', sa.Integer(), nullable=True),
    sa.Column('alarmes_onduleurs', sa.Integer(), nullable=True),
    sa.Column('energie_stockee', sa.Float(), nullable=True),
    sa.Column('energie_destockee', sa.Float(), nullable=True),
    sa.Column('rendement_stockage', sa.Float(), nullable=True),
    sa.Column('cycles_charge_decharge', sa.Integer(), nullable=True),
    sa.Column('etat_sante_batteries', sa.Float(), nullable=True),
    sa.Column('precision_suivi_moyenne', sa.Float(), nullable=True),
    sa.Column('defauts_suivi', sa.Integer(), nullable=True),
    sa.Column('maintenance_systeme_suivi', sa.Integer(), nullable=True),
    sa.Column('maintenances_preventives', sa.Integer(), nullable=True),
    sa.Column('maintenances_correctives', sa.Integer(), nullable=True),
    sa.Column('nettoyage_modules', sa.Integer(), nullable=True),
    sa.Column('incidents_majeurs', sa.Integer(), nullable=True),
    sa.Column('description_incidents', sa.Text(), nullable=True),
    sa.Column('modules_defectueux', sa.Integer(), nullable=True),
    sa.Column('onduleurs_defectueux', sa.Integer(), nullable=True),
    sa.Column('defauts_systeme_monitoring', sa.Integer(), nullable=True),
    sa.Column('disponibilite_donnees', sa.Float(), nullable=True),
    sa.Column('precision_mesures', sa.Float(), nullable=True),
    sa.Column('reduction_emissions_co2', sa.Float(), nullable=True),
    sa.Column('impact_environnemental', sa.Text(), nullable=True),
    sa.Column('gestion_fin_vie_composants', sa.Text(), nullable=True),
    sa.Column('cout_maintenance', sa.Float(), nullable=True),
    sa.Column('cout_nettoyage', sa.Float(), nullable=True),
    sa.Column('recettes_vente', sa.Float(), nullable=True),
    sa.Column('economie_carburant', sa.Float(), nullable=True),
    sa.Column('rentabilite', sa.Float(), nullable=True),
    sa.Column('degradation_observee', sa.Float(), nullable=True),
    sa.Column('disponibilite_systeme', sa.Float(), nullable=True),
    sa.Column('taux_defaillance', sa.Float(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('date_validation', sa.DateTime(), nullable=True),
    sa.Column('date_transmission', sa.DateTime(), nullable=True),
    sa.Column('validé_par', sa.String(length=100), nullable=True),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['centrale_id'], ['centrales_solaire.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rapports_thermique',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=False),
    sa.Column('date_modification', sa.DateTime(), nullable=False),
    sa.Column('actif', sa.Boolean(), nullable=False),
    sa.Column('centrale_id', sa.Integer(), nullable=False),
    sa.Column('annee', sa.Integer(), nullable=False),
    sa.Column('mois', sa.Integer(), nullable=False),
    sa.Column('periode_debut', sa.DateTime(), nullable=False),
    sa.Column('periode_fin', sa.DateTime(), nullable=False),
    sa.Column('energie_produite', sa.Float(), nullable=True),
    sa.Column('energie_disponible', sa.Float(), nullable=True),
    sa.Column('facteur_charge', sa.Float(), nullable=True),
    sa.Column('temps_fonctionnement', sa.Float(), nullable=True),
    sa.Column('nombre_demarrages', sa.Integer(), nullable=True),
    sa.Column('nombre_arrets', sa.Integer(), nullable=True),
    sa.Column('duree_arrets', sa.Float(), nullable=True),
    sa.Column('consommation_combustible', sa.Float(), nullable=True),
    sa.Column('type_combustible_utilise', sa.String(length=50), nullable=True),
    sa.Column('cout_combustible', sa.Float(), nullable=True),
    sa.Column('prix_unitaire_combustible', sa.Float(), nullable=True),
    sa.Column('consommation_specifique_reelle', sa.Float(), nullable=True),
    sa.Column('rendement_global', sa.Float(), nullable=True),
    sa.Column('rendement_thermique', sa.Float(), nullable=True),
    sa.Column('rendement_electrique', sa.Float(), nullable=True),
    sa.Column('temperature_fumees', sa.Float(), nullable=True),
    sa.Column('pression_admission', sa.Float(), nullable=True),
    sa.Column('charge_moyenne', sa.Float(), nullable=True),
    sa.Column('charge_maximale', sa.Float(), nullable=True),
    sa.Column('charge_minimale', sa.Float(), nullable=True),
    sa.Column('temperature_ambiante_moyenne', sa.Float(), nullable=True),
    sa.Column('humidite_relative_moyenne', sa.Float(), nullable=True),
    sa.Column('maintenances_preventives', sa.Integer(), nullable=True),
    sa.Column('maintenances_correctives', sa.Integer(), nullable=True),
    sa.Column('incidents_majeurs', sa.Integer(), nullable=True),
    sa.Column('description_incidents', sa.Text(), nullable=True),
    sa.Column('duree_maintenance', sa.Float(), nullable=True),
    sa.Column('consommation_huile_moteur', sa.Float(), nullable=True),
    sa.Column('consommation_liquide_refroidissement', sa.Float(), nullable=True),
    sa.Column('remplacement_filtres', sa.Integer(), nullable=True),
    sa.Column('autres_consommables', sa.Text(), nullable=True),
    sa.Column('emissions_co2', sa.Float(), nullable=True),
    sa.Column('emissions_nox', sa.Float(), nullable=True),
    sa.Column('emissions_co', sa.Float(), nullable=True),
    sa.Column('gestion_dechets', sa.Text(), nullable=True),
    sa.Column('impact_environnemental', sa.Text(), nullable=True),
    sa.Column('cout_exploitation', sa.Float(), nullable=True),
    sa.Column('cout_maintenance', sa.Float(), nullable=True),
    sa.Column('recettes_vente', sa.Float(), nullable=True),
    sa.Column('rentabilite', sa.Float(), nullable=True),
    sa.Column('statut', sa.String(length=50), nullable=True),
    sa.Column('date_validation', sa.DateTime(), nullable=True),
    sa.Column('date_transmission', sa.DateTime(), nullable=True),
    sa.Column('validé_par', sa.String(length=100), nullable=True),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['centrale_id'], ['centrales_thermique.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('donnees_solaire_quotidiennes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=False),
    sa.Column('date_modification', sa.DateTime(), nullable=False),
    sa.Column('actif', sa.Boolean(), nullable=False),
    sa.Column('rapport_id', sa.Integer(), nullable=False),
    sa.Column('date_production', sa.DateTime(), nullable=False),
    sa.Column('energie_produite', sa.Float(), nullable=True),
    sa.Column('puissance_max', sa.Float(), nullable=True),
    sa.Column('heure_puissance_max', sa.String(length=10), nullable=True),
    sa.Column('irradiation', sa.Float(), nullable=True),
    sa.Column('temperature_ambiante_max', sa.Float(), nullable=True),
    sa.Column('temperature_ambiante_min', sa.Float(), nullable=True),
    sa.Column('temperature_modules_max', sa.Float(), nullable=True),
    sa.Column('humidite_relative', sa.Float(), nullable=True),
    sa.Column('vitesse_vent_max', sa.Float(), nullable=True),
    sa.Column('performance_ratio', sa.Float(), nullable=True),
    sa.Column('rendement_quotidien', sa.Float(), nullable=True),
    sa.Column('duree_arrets', sa.Float(), nullable=True),
    sa.Column('cause_arrets', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['rapport_id'], ['rapports_solaire.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groupes_production_thermique',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=False),
    sa.Column('date_modification', sa.DateTime(), nullable=False),
    sa.Column('actif', sa.Boolean(), nullable=False),
    sa.Column('rapport_id', sa.Integer(), nullable=False),
    sa.Column('numero_groupe', sa.Integer(), nullable=False),
    sa.Column('nom_groupe', sa.String(length=100), nullable=True),
    sa.Column('type_groupe', sa.String(length=50), nullable=True),
    sa.Column('energie_produite', sa.Float(), nullable=True),
    sa.Column('temps_fonctionnement', sa.Float(), nullable=True),
    sa.Column('nombre_demarrages', sa.Integer(), nullable=True),
    sa.Column('facteur_charge', sa.Float(), nullable=True),
    sa.Column('consommation_combustible', sa.Float(), nullable=True),
    sa.Column('consommation_specifique', sa.Float(), nullable=True),
    sa.Column('rendement', sa.Float(), nullable=True),
    sa.Column('puissance_moyenne', sa.Float(), nullable=True),
    sa.Column('temperature_echappement', sa.Float(), nullable=True),
    sa.Column('etat_general', sa.String(length=50), nullable=True),
    sa.Column('heures_fonctionnement_totales', sa.Float(), nullable=True),
    sa.Column('prochaine_maintenance', sa.DateTime(), nullable=True),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['rapport_id'], ['rapports_thermique.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('groupes_production_thermique')
    op.drop_table('donnees_solaire_quotidiennes')
    op.drop_table('rapports_thermique')
    op.drop_table('rapports_solaire')
    with op.batch_alter_table('centrales_thermique', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_centrales_thermique_nom'))

    op.drop_table('centrales_thermique')
    with op.batch_alter_table('centrales_solaire', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_centrales_solaire_nom'))

    op.drop_table('centrales_solaire')
    # ### end Alembic commands ###
